

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Oct 07 16:03:44 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F648A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F648A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  008C                     	;# 
    92  008E                     	;# 
    93  0092                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009F                     	;# 
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000E                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0015                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0017                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  008C                     	;# 
   129  008E                     	;# 
   130  0092                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009F                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  008C                     	;# 
   166  008E                     	;# 
   167  0092                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009A                     	;# 
   171  009B                     	;# 
   172  009C                     	;# 
   173  009D                     	;# 
   174  009F                     	;# 
   175                           
   176                           	psect	idataCOMMON
   177  02C6                     __pidataCOMMON:	
   178                           
   179                           ;initializer for _cnt
   180  02C6  3401               	retlw	1
   181                           
   182                           	psect	idataBANK0
   183  0250                     __pidataBANK0:	
   184                           
   185                           ;initializer for _status_bit
   186  0250  3400               	retlw	0
   187  0251  3401               	retlw	1
   188  0252  3403               	retlw	3
   189  0253  3407               	retlw	7
   190  0254  340F               	retlw	15
   191  0255  3410               	retlw	16
   192  0256  3411               	retlw	17
   193  0257  3413               	retlw	19
   194  0258  3417               	retlw	23
   195  0259  341F               	retlw	31
   196  025A  3420               	retlw	32
   197  025B  3421               	retlw	33
   198  025C  3423               	retlw	35
   199  025D  3427               	retlw	39
   200  025E  342F               	retlw	47
   201  025F  3430               	retlw	48
   202  0260  3431               	retlw	49
   203  0261  3433               	retlw	51
   204  0262  3437               	retlw	55
   205  0263  343F               	retlw	63
   206                           
   207                           ;initializer for _red_led
   208  0264  3400               	retlw	0
   209  0265  3401               	retlw	1
   210  0266  3403               	retlw	3
   211  0267  3407               	retlw	7
   212  0268  340F               	retlw	15
   213                           
   214                           	psect	strings
   215  02BA                     __pstrings:	
   216  02BA                     stringtab:	
   217  02BA                     __stringtab:	
   218  02BA                     stringcode:	
   219                           ;	String table - string pointers are 1 byte each
   220                           
   221  02BA                     stringdir:	
   222  02BA  3002               	movlw	high stringdir
   223  02BB  008A               	movwf	10
   224  02BC  0804               	movf	4,w
   225  02BD  0A84               	incf	4,f
   226  02BE  0782               	addwf	2,f
   227  02BF                     __stringbase:	
   228  02BF  3400               	retlw	0
   229  02C0                     __end_of__stringtab:	
   230  02C0                     _UPDATE:	
   231  02C0  3409               	retlw	9
   232  02C1                     __end_of_UPDATE:	
   233  0005                     _PORTA	set	5
   234  0006                     _PORTB	set	6
   235  0001                     _TMR0	set	1
   236  001F                     _CMCON	set	31
   237  005F                     _GIE	set	95
   238  005D                     _T0IE	set	93
   239  005A                     _T0IF	set	90
   240  0086                     _TRISB	set	134
   241  0085                     _TRISA	set	133
   242  0081                     _OPTION_REG	set	129
   243                           
   244                           ; #config settings
   245  0000                     
   246                           	psect	cinit
   247  000D                     start_initialization:	
   248  000D                     __initialization:	
   249                           
   250                           ; Initialize objects allocated to BANK0
   251  000D  1383               	bcf	3,7	;select IRP bank0
   252  000E  3039               	movlw	low (__pdataBANK0+25)
   253  000F  00FD               	movwf	btemp+-1
   254  0010  3002               	movlw	high __pidataBANK0
   255  0011  00FE               	movwf	btemp
   256  0012  3050               	movlw	low __pidataBANK0
   257  0013  00FF               	movwf	btemp+1
   258  0014  3020               	movlw	low __pdataBANK0
   259  0015  0084               	movwf	4
   260  0016  118A  2283  118A   	fcall	init_ram0
   261                           
   262                           ; Initialize objects allocated to COMMON
   263  0019  118A  22C6  118A   	fcall	__pidataCOMMON	;fetch initializer
   264  001C  00F9               	movwf	__pdataCOMMON& (0+127)
   265                           
   266                           ; Clear objects allocated to COMMON
   267  001D  01F7               	clrf	__pbssCOMMON& (0+127)
   268  001E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   269  001F                     end_of_initialization:	
   270                           ;End of C runtime variable initialization code
   271                           
   272  001F                     __end_of__initialization:	
   273  001F  0183               	clrf	3
   274  0020  118A  2822         	ljmp	_main	;jump to C main() function
   275                           
   276                           	psect	bssCOMMON
   277  0077                     __pbssCOMMON:	
   278  0077                     _outcoin:	
   279  0077                     	ds	1
   280  0078                     _outfg:	
   281  0078                     	ds	1
   282                           
   283                           	psect	dataCOMMON
   284  0079                     __pdataCOMMON:	
   285  0079                     _cnt:	
   286  0079                     	ds	1
   287                           
   288                           	psect	dataBANK0
   289  0020                     __pdataBANK0:	
   290  0020                     _status_bit:	
   291  0020                     	ds	20
   292  0034                     _red_led:	
   293  0034                     	ds	5
   294                           
   295                           	psect	inittext
   296  027F                     init_fetch0:	
   297                           ;	Called with low address in FSR and high address in W
   298                           
   299  027F  087E               	movf	btemp,w
   300  0280  008A               	movwf	10
   301  0281  087F               	movf	btemp+1,w
   302  0282  0082               	movwf	2
   303  0283                     init_ram0:	
   304                           ;Called with:
   305                           ;	high address of idata address in btemp 
   306                           ;	low address of idata address in btemp+1 
   307                           ;	low address of data in FSR
   308                           ;	high address + 1 of data in btemp-1
   309                           
   310  0283  118A  227F  118A   	fcall	init_fetch0
   311  0286  0080               	movwf	0
   312  0287  0A84               	incf	4,f
   313  0288  0804               	movf	4,w
   314  0289  067D               	xorwf	btemp+-1,w
   315  028A  1903               	btfsc	3,2
   316  028B  3400               	retlw	0
   317  028C  0AFF               	incf	btemp+1,f
   318  028D  1903               	btfsc	3,2
   319  028E  0AFE               	incf	btemp,f
   320  028F  2A83               	goto	init_ram0
   321                           
   322                           	psect	cstackCOMMON
   323  0070                     __pcstackCOMMON:	
   324  0070                     ?_init:	
   325  0070                     ?_led_on:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_led_off:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_sw_read:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_DispStatus:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_isr:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_isr:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_timer:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_halt:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_main:	
   350                           ; 1 bytes @ 0x0
   351                           
   352                           
   353                           ; 2 bytes @ 0x0
   354  0070                     	ds	3
   355  0073                     isr@i:	
   356                           
   357                           ; 1 bytes @ 0x3
   358  0073                     	ds	1
   359  0074                     ??_init:	
   360  0074                     ??_led_on:	
   361                           ; 1 bytes @ 0x4
   362                           
   363  0074                     ??_led_off:	
   364                           ; 1 bytes @ 0x4
   365                           
   366  0074                     ??_sw_read:	
   367                           ; 1 bytes @ 0x4
   368                           
   369  0074                     ??_timer:	
   370                           ; 1 bytes @ 0x4
   371                           
   372  0074                     ??_halt:	
   373                           ; 1 bytes @ 0x4
   374                           
   375  0074                     ?_Transition:	
   376                           ; 1 bytes @ 0x4
   377                           
   378  0074                     ?_DispCoinA:	
   379                           ; 2 bytes @ 0x4
   380                           
   381  0074                     ?_DispCoinB:	
   382                           ; 2 bytes @ 0x4
   383                           
   384  0074                     Transition@st:	
   385                           ; 2 bytes @ 0x4
   386                           
   387  0074                     DispCoinA@num:	
   388                           ; 1 bytes @ 0x4
   389                           
   390  0074                     DispCoinB@num:	
   391                           ; 2 bytes @ 0x4
   392                           
   393                           
   394                           ; 2 bytes @ 0x4
   395  0074                     	ds	1
   396  0075                     led_on@bit1:	
   397  0075                     led_off@bit1:	
   398                           ; 1 bytes @ 0x5
   399                           
   400  0075                     Transition@a:	
   401                           ; 1 bytes @ 0x5
   402                           
   403                           
   404                           ; 1 bytes @ 0x5
   405  0075                     	ds	1
   406  0076                     ??_DispCoinA:	
   407  0076                     ??_DispCoinB:	
   408                           ; 1 bytes @ 0x6
   409                           
   410  0076                     led_on@data:	
   411                           ; 1 bytes @ 0x6
   412                           
   413  0076                     led_off@data:	
   414                           ; 1 bytes @ 0x6
   415                           
   416  0076                     Transition@b:	
   417                           ; 1 bytes @ 0x6
   418                           
   419                           
   420                           ; 1 bytes @ 0x6
   421  0076                     	ds	1
   422  0077                     ??_DispStatus:	
   423  0077                     ??_StampOut:	
   424                           ; 1 bytes @ 0x7
   425                           
   426                           
   427                           	psect	cstackBANK0
   428  0039                     __pcstackBANK0:	
   429                           ; 1 bytes @ 0x7
   430                           
   431  0039                     ??_Transition:	
   432  0039                     ?_StampOut:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0039                     DispStatus@bit1:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0039                     timer@i:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0039                     sw_read@t:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0039                     StampOut@num:	
   445                           ; 2 bytes @ 0x0
   446                           
   447                           
   448                           ; 2 bytes @ 0x0
   449  0039                     	ds	1
   450  003A                     timer@j:	
   451                           
   452                           ; 1 bytes @ 0x1
   453  003A                     	ds	1
   454  003B                     sw_read@data2:	
   455  003B                     Transition@it:	
   456                           ; 1 bytes @ 0x2
   457                           
   458  003B                     timer@t:	
   459                           ; 1 bytes @ 0x2
   460                           
   461                           
   462                           ; 2 bytes @ 0x2
   463  003B                     	ds	1
   464  003C                     sw_read@data:	
   465                           
   466                           ; 1 bytes @ 0x3
   467  003C                     	ds	1
   468  003D                     ??_main:	
   469                           
   470                           ; 1 bytes @ 0x4
   471  003D                     	ds	3
   472  0040                     main@s:	
   473                           
   474                           ; 2 bytes @ 0x7
   475  0040                     	ds	2
   476  0042                     main@it:	
   477                           
   478                           ; 1 bytes @ 0x9
   479  0042                     	ds	1
   480  0043                     main@b:	
   481                           
   482                           ; 2 bytes @ 0xA
   483  0043                     	ds	2
   484  0045                     main@a:	
   485                           
   486                           ; 2 bytes @ 0xC
   487  0045                     	ds	2
   488  0047                     main@st:	
   489                           
   490                           ; 1 bytes @ 0xE
   491  0047                     	ds	1
   492                           
   493                           	psect	maintext
   494  0022                     __pmaintext:	
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 35 in file "pic30/stamp.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  a               2   12[BANK0 ] int 
   505 ;;  b               2   10[BANK0 ] int 
   506 ;;  s               2    7[BANK0 ] int 
   507 ;;  st              1   14[BANK0 ] enum E474
   508 ;;  it              1    9[BANK0 ] unsigned char 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  2  132[None  ] int 
   511 ;; Registers used:
   512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : B00/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   518 ;;      Params:         0       0       0       0
   519 ;;      Locals:         0       8       0       0
   520 ;;      Temps:          0       3       0       0
   521 ;;      Totals:         0      11       0       0
   522 ;;Total ram usage:       11 bytes
   523 ;; Hardware stack levels required when called:    3
   524 ;; This function calls:
   525 ;;		_DispCoinA
   526 ;;		_DispCoinB
   527 ;;		_DispStatus
   528 ;;		_StampOut
   529 ;;		_Transition
   530 ;;		_halt
   531 ;;		_init
   532 ;;		_sw_read
   533 ;;		_timer
   534 ;; This function is called by:
   535 ;;		Startup code after reset
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           
   540                           ;psect for function _main
   541  0022                     _main:	
   542  0022                     l1321:	
   543                           ;incstack = 0
   544                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   545                           
   546                           
   547                           ;stamp.c: 36: int s, a, b;;stamp.c: 37: char it;;stamp.c: 38: Status st = stEmpty;
   548  0022  1283               	bcf	3,5	;RP0=0, select bank0
   549  0023  1303               	bcf	3,6	;RP1=0, select bank0
   550  0024  01C7               	clrf	main@st
   551  0025                     l1323:	
   552                           
   553                           ;stamp.c: 40: init();
   554  0025  118A  2269  118A   	fcall	_init
   555  0028                     l1325:	
   556                           
   557                           ;stamp.c: 42: outfg = outcoin = 0;
   558  0028  01F7               	clrf	_outcoin
   559  0029  01F8               	clrf	_outfg
   560  002A                     l1327:	
   561                           
   562                           ;stamp.c: 44: it = sw_read();
   563  002A  118A  2129  118A   	fcall	_sw_read
   564  002D  1283               	bcf	3,5	;RP0=0, select bank0
   565  002E  1303               	bcf	3,6	;RP1=0, select bank0
   566  002F  00BD               	movwf	??_main
   567  0030  083D               	movf	??_main,w
   568  0031  00C2               	movwf	main@it
   569  0032                     l1329:	
   570                           
   571                           ;stamp.c: 45: if (it == 0) continue;
   572  0032  0842               	movf	main@it,w
   573  0033  1D03               	btfss	3,2
   574  0034  2836               	goto	u861
   575  0035  2837               	goto	u860
   576  0036                     u861:	
   577  0036  2838               	goto	l1333
   578  0037                     u860:	
   579  0037  28A6               	goto	l1359
   580  0038                     l1333:	
   581                           
   582                           ;stamp.c: 46: outfg = outcoin = 0;
   583  0038  01F7               	clrf	_outcoin
   584  0039  01F8               	clrf	_outfg
   585  003A                     l1335:	
   586                           
   587                           ;stamp.c: 47: s = Transition(it, &st, &a, &b);
   588  003A  3047               	movlw	(low (main@st| 0))& (0+255)
   589  003B  00BD               	movwf	??_main
   590  003C  083D               	movf	??_main,w
   591  003D  00F4               	movwf	Transition@st
   592  003E  3045               	movlw	(low (main@a| 0))& (0+255)
   593  003F  00BE               	movwf	??_main+1
   594  0040  083E               	movf	??_main+1,w
   595  0041  00F5               	movwf	Transition@a
   596  0042  3043               	movlw	(low (main@b| 0))& (0+255)
   597  0043  00BF               	movwf	??_main+2
   598  0044  083F               	movf	??_main+2,w
   599  0045  00F6               	movwf	Transition@b
   600  0046  0842               	movf	main@it,w
   601  0047  118A  20B1  118A   	fcall	_Transition
   602  004A  0875               	movf	?_Transition+1,w
   603  004B  1283               	bcf	3,5	;RP0=0, select bank0
   604  004C  1303               	bcf	3,6	;RP1=0, select bank0
   605  004D  00C1               	movwf	main@s+1
   606  004E  0874               	movf	?_Transition,w
   607  004F  00C0               	movwf	main@s
   608  0050                     l1337:	
   609                           
   610                           ;stamp.c: 48: DispStatus(status_bit[st]);
   611  0050  0847               	movf	main@st,w
   612  0051  3E20               	addlw	(low (_status_bit| 0))& (0+255)
   613  0052  0084               	movwf	4
   614  0053  1383               	bcf	3,7	;select IRP bank0
   615  0054  0800               	movf	0,w
   616  0055  118A  2290  118A   	fcall	_DispStatus
   617  0058                     l1339:	
   618                           
   619                           ;stamp.c: 49: if (a | b) outfg = 1;
   620  0058  1283               	bcf	3,5	;RP0=0, select bank0
   621  0059  1303               	bcf	3,6	;RP1=0, select bank0
   622  005A  0843               	movf	main@b,w
   623  005B  0445               	iorwf	main@a,w
   624  005C  00BD               	movwf	??_main
   625  005D  0844               	movf	main@b+1,w
   626  005E  0446               	iorwf	main@a+1,w
   627  005F  00BE               	movwf	??_main+1
   628  0060  083D               	movf	??_main,w
   629  0061  043E               	iorwf	??_main+1,w
   630  0062  1903               	btfsc	3,2
   631  0063  2865               	goto	u871
   632  0064  2866               	goto	u870
   633  0065                     u871:	
   634  0065  2868               	goto	l1343
   635  0066                     u870:	
   636  0066                     l1341:	
   637  0066  01F8               	clrf	_outfg
   638  0067  0AF8               	incf	_outfg,f
   639  0068                     l1343:	
   640                           
   641                           ;stamp.c: 50: StampOut(s);
   642  0068  0841               	movf	main@s+1,w
   643  0069  00BA               	movwf	StampOut@num+1
   644  006A  0840               	movf	main@s,w
   645  006B  00B9               	movwf	StampOut@num
   646  006C  118A  2188  118A   	fcall	_StampOut
   647  006F                     l1345:	
   648                           
   649                           ;stamp.c: 51: if (a) DispCoinA(a);
   650  006F  1283               	bcf	3,5	;RP0=0, select bank0
   651  0070  1303               	bcf	3,6	;RP1=0, select bank0
   652  0071  0845               	movf	main@a,w
   653  0072  0446               	iorwf	main@a+1,w
   654  0073  1903               	btfsc	3,2
   655  0074  2876               	goto	u881
   656  0075  2877               	goto	u880
   657  0076                     u881:	
   658  0076  287E               	goto	l1349
   659  0077                     u880:	
   660  0077                     l1347:	
   661  0077  0846               	movf	main@a+1,w
   662  0078  00F5               	movwf	DispCoinA@num+1
   663  0079  0845               	movf	main@a,w
   664  007A  00F4               	movwf	DispCoinA@num
   665  007B  118A  21EB  118A   	fcall	_DispCoinA
   666  007E                     l1349:	
   667                           
   668                           ;stamp.c: 52: if (b) DispCoinB(b);
   669  007E  1283               	bcf	3,5	;RP0=0, select bank0
   670  007F  1303               	bcf	3,6	;RP1=0, select bank0
   671  0080  0843               	movf	main@b,w
   672  0081  0444               	iorwf	main@b+1,w
   673  0082  1903               	btfsc	3,2
   674  0083  2885               	goto	u891
   675  0084  2886               	goto	u890
   676  0085                     u891:	
   677  0085  2899               	goto	l139
   678  0086                     u890:	
   679  0086                     l1351:	
   680  0086  0844               	movf	main@b+1,w
   681  0087  00F5               	movwf	DispCoinB@num+1
   682  0088  0843               	movf	main@b,w
   683  0089  00F4               	movwf	DispCoinB@num
   684  008A  118A  2233  118A   	fcall	_DispCoinB
   685  008D  2899               	goto	l139
   686  008E                     l1353:	
   687                           
   688                           ;stamp.c: 54: if (it == 0x18) break;
   689  008E  3018               	movlw	24
   690  008F  0642               	xorwf	main@it,w
   691  0090  1D03               	btfss	3,2
   692  0091  2893               	goto	u901
   693  0092  2894               	goto	u900
   694  0093                     u901:	
   695  0093  2895               	goto	l1357
   696  0094                     u900:	
   697  0094  28A6               	goto	l1359
   698  0095                     l1357:	
   699                           
   700                           ;stamp.c: 55: timer(30);
   701  0095  301E               	movlw	30
   702  0096  118A  21C2  118A   	fcall	_timer
   703  0099                     l139:	
   704  0099  118A  2129  118A   	fcall	_sw_read
   705  009C  1283               	bcf	3,5	;RP0=0, select bank0
   706  009D  1303               	bcf	3,6	;RP1=0, select bank0
   707  009E  00BD               	movwf	??_main
   708  009F  083D               	movf	??_main,w
   709  00A0  00C2               	movwf	main@it
   710  00A1  0842               	movf	main@it,w
   711  00A2  1D03               	btfss	3,2
   712  00A3  28A5               	goto	u911
   713  00A4  28A6               	goto	u910
   714  00A5                     u911:	
   715  00A5  288E               	goto	l1353
   716  00A6                     u910:	
   717  00A6                     l1359:	
   718                           
   719                           ;stamp.c: 56: };stamp.c: 57: } while (st != stExit);
   720  00A6  3003               	movlw	3
   721  00A7  0647               	xorwf	main@st,w
   722  00A8  1D03               	btfss	3,2
   723  00A9  28AB               	goto	u921
   724  00AA  28AC               	goto	u920
   725  00AB                     u921:	
   726  00AB  282A               	goto	l1327
   727  00AC                     u920:	
   728  00AC                     l1361:	
   729                           
   730                           ;stamp.c: 59: halt();
   731  00AC  118A  22C1  118A   	fcall	_halt
   732  00AF                     l144:	
   733  00AF  118A  280B         	ljmp	start
   734  00B1                     __end_of_main:	
   735                           
   736                           	psect	text1
   737  01C2                     __ptext1:	
   738 ;; *************** function _timer *****************
   739 ;; Defined at:
   740 ;;		line 153 in file "pic30/piclib.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;  i               1    wreg     unsigned char 
   743 ;; Auto vars:     Size  Location     Type
   744 ;;  i               1    0[BANK0 ] unsigned char 
   745 ;;  t               2    2[BANK0 ] int 
   746 ;;  j               1    1[BANK0 ] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, btemp+1
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   756 ;;      Params:         0       0       0       0
   757 ;;      Locals:         0       4       0       0
   758 ;;      Temps:          1       0       0       0
   759 ;;      Totals:         1       4       0       0
   760 ;;Total ram usage:        5 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    1
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _timer
   772  01C2                     _timer:	
   773                           
   774                           ;incstack = 0
   775                           ; Regs used in _timer: [wreg+status,2+status,0+btemp+1]
   776                           ;timer@i stored from wreg
   777  01C2  1283               	bcf	3,5	;RP0=0, select bank0
   778  01C3  1303               	bcf	3,6	;RP1=0, select bank0
   779  01C4  00B9               	movwf	timer@i
   780  01C5                     l1253:	
   781                           
   782                           ;piclib.c: 155: char j;;piclib.c: 156: int t;;piclib.c: 157: for (j = 0; j < i; j++){
   783  01C5  01BA               	clrf	timer@j
   784  01C6  29E4               	goto	l1267
   785  01C7                     l1255:	
   786                           
   787                           ;piclib.c: 158: for (t = 0; t < 1000;t++)
   788  01C7  01BB               	clrf	timer@t
   789  01C8  01BC               	clrf	timer@t+1
   790  01C9                     l1261:	
   791                           
   792                           ;piclib.c: 159: ;
   793  01C9  3001               	movlw	1
   794  01CA  1283               	bcf	3,5	;RP0=0, select bank0
   795  01CB  1303               	bcf	3,6	;RP1=0, select bank0
   796  01CC  07BB               	addwf	timer@t,f
   797  01CD  1803               	skipnc
   798  01CE  0ABC               	incf	timer@t+1,f
   799  01CF  3000               	movlw	0
   800  01D0  07BC               	addwf	timer@t+1,f
   801  01D1                     l1263:	
   802  01D1  083C               	movf	timer@t+1,w
   803  01D2  3A80               	xorlw	128
   804  01D3  00FF               	movwf	btemp+1
   805  01D4  3083               	movlw	131
   806  01D5  027F               	subwf	btemp+1,w
   807  01D6  1D03               	skipz
   808  01D7  29DA               	goto	u785
   809  01D8  30E8               	movlw	232
   810  01D9  023B               	subwf	timer@t,w
   811  01DA                     u785:	
   812  01DA  1C03               	skipc
   813  01DB  29DD               	goto	u781
   814  01DC  29DE               	goto	u780
   815  01DD                     u781:	
   816  01DD  29C9               	goto	l1261
   817  01DE                     u780:	
   818  01DE                     l1265:	
   819  01DE  3001               	movlw	1
   820  01DF  00F4               	movwf	??_timer
   821  01E0  0874               	movf	??_timer,w
   822  01E1  1283               	bcf	3,5	;RP0=0, select bank0
   823  01E2  1303               	bcf	3,6	;RP1=0, select bank0
   824  01E3  07BA               	addwf	timer@j,f
   825  01E4                     l1267:	
   826  01E4  0839               	movf	timer@i,w
   827  01E5  023A               	subwf	timer@j,w
   828  01E6  1C03               	skipc
   829  01E7  29E9               	goto	u791
   830  01E8  29EA               	goto	u790
   831  01E9                     u791:	
   832  01E9  29C7               	goto	l1255
   833  01EA                     u790:	
   834  01EA                     l99:	
   835  01EA  0008               	return
   836  01EB                     __end_of_timer:	
   837                           
   838                           	psect	text2
   839  0129                     __ptext2:	
   840 ;; *************** function _sw_read *****************
   841 ;; Defined at:
   842 ;;		line 57 in file "pic30/piclib.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  t               2    0[BANK0 ] int 
   847 ;;  data            1    3[BANK0 ] unsigned char 
   848 ;;  data2           1    2[BANK0 ] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      unsigned char 
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0, btemp+1
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   858 ;;      Params:         0       0       0       0
   859 ;;      Locals:         0       4       0       0
   860 ;;      Temps:          1       0       0       0
   861 ;;      Totals:         1       4       0       0
   862 ;;Total ram usage:        5 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_main
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _sw_read
   874  0129                     _sw_read:	
   875  0129                     l1193:	
   876                           ;incstack = 0
   877                           ; Regs used in _sw_read: [wreg+status,2+status,0+btemp+1]
   878                           
   879                           
   880                           ;piclib.c: 59: char data, data2;;piclib.c: 60: int t;;piclib.c: 62: data = PORTA;
   881  0129  1283               	bcf	3,5	;RP0=0, select bank0
   882  012A  1303               	bcf	3,6	;RP1=0, select bank0
   883  012B  0805               	movf	5,w	;volatile
   884  012C  00F4               	movwf	??_sw_read
   885  012D  0874               	movf	??_sw_read,w
   886  012E  00BC               	movwf	sw_read@data
   887  012F                     l1195:	
   888                           
   889                           ;piclib.c: 63: data = ~data & 0x1f;
   890  012F  093C               	comf	sw_read@data,w
   891  0130  391F               	andlw	31
   892  0131  00F4               	movwf	??_sw_read
   893  0132  0874               	movf	??_sw_read,w
   894  0133  00BC               	movwf	sw_read@data
   895  0134                     l1197:	
   896                           
   897                           ;piclib.c: 64: if (!(data == 0x01;piclib.c: 65: || data == 0x02;piclib.c: 66: || data ==
      +                           0x04;piclib.c: 67: || data == 0x08;piclib.c: 68: || data == 0x10;piclib.c: 69: || data 
      +                          == 0x18)) return 0;
   898  0134  033C               	decf	sw_read@data,w
   899  0135  1903               	btfsc	3,2
   900  0136  2938               	goto	u661
   901  0137  2939               	goto	u660
   902  0138                     u661:	
   903  0138  2959               	goto	l1213
   904  0139                     u660:	
   905  0139                     l1199:	
   906  0139  3002               	movlw	2
   907  013A  063C               	xorwf	sw_read@data,w
   908  013B  1903               	btfsc	3,2
   909  013C  293E               	goto	u671
   910  013D  293F               	goto	u670
   911  013E                     u671:	
   912  013E  2959               	goto	l1213
   913  013F                     u670:	
   914  013F                     l1201:	
   915  013F  3004               	movlw	4
   916  0140  063C               	xorwf	sw_read@data,w
   917  0141  1903               	btfsc	3,2
   918  0142  2944               	goto	u681
   919  0143  2945               	goto	u680
   920  0144                     u681:	
   921  0144  2959               	goto	l1213
   922  0145                     u680:	
   923  0145                     l1203:	
   924  0145  3008               	movlw	8
   925  0146  063C               	xorwf	sw_read@data,w
   926  0147  1903               	btfsc	3,2
   927  0148  294A               	goto	u691
   928  0149  294B               	goto	u690
   929  014A                     u691:	
   930  014A  2959               	goto	l1213
   931  014B                     u690:	
   932  014B                     l1205:	
   933  014B  3010               	movlw	16
   934  014C  063C               	xorwf	sw_read@data,w
   935  014D  1903               	btfsc	3,2
   936  014E  2950               	goto	u701
   937  014F  2951               	goto	u700
   938  0150                     u701:	
   939  0150  2959               	goto	l1213
   940  0151                     u700:	
   941  0151                     l1207:	
   942  0151  3018               	movlw	24
   943  0152  063C               	xorwf	sw_read@data,w
   944  0153  1903               	btfsc	3,2
   945  0154  2956               	goto	u711
   946  0155  2957               	goto	u710
   947  0156                     u711:	
   948  0156  2959               	goto	l1213
   949  0157                     u710:	
   950  0157                     l1209:	
   951  0157  3000               	movlw	0
   952  0158  2987               	goto	l58
   953  0159                     l1213:	
   954                           
   955                           ;piclib.c: 70: if (data != 0x00) {
   956  0159  083C               	movf	sw_read@data,w
   957  015A  1903               	btfsc	3,2
   958  015B  295D               	goto	u721
   959  015C  295E               	goto	u720
   960  015D                     u721:	
   961  015D  2957               	goto	l1209
   962  015E                     u720:	
   963  015E                     l1215:	
   964                           
   965                           ;piclib.c: 71: for (t = 0; t < 100; t++);
   966  015E  01B9               	clrf	sw_read@t
   967  015F  01BA               	clrf	sw_read@t+1
   968  0160                     l1221:	
   969  0160  3001               	movlw	1
   970  0161  1283               	bcf	3,5	;RP0=0, select bank0
   971  0162  1303               	bcf	3,6	;RP1=0, select bank0
   972  0163  07B9               	addwf	sw_read@t,f
   973  0164  1803               	skipnc
   974  0165  0ABA               	incf	sw_read@t+1,f
   975  0166  3000               	movlw	0
   976  0167  07BA               	addwf	sw_read@t+1,f
   977  0168                     l1223:	
   978  0168  083A               	movf	sw_read@t+1,w
   979  0169  3A80               	xorlw	128
   980  016A  00FF               	movwf	btemp+1
   981  016B  3080               	movlw	128
   982  016C  027F               	subwf	btemp+1,w
   983  016D  1D03               	skipz
   984  016E  2971               	goto	u735
   985  016F  3064               	movlw	100
   986  0170  0239               	subwf	sw_read@t,w
   987  0171                     u735:	
   988  0171  1C03               	skipc
   989  0172  2974               	goto	u731
   990  0173  2975               	goto	u730
   991  0174                     u731:	
   992  0174  2960               	goto	l1221
   993  0175                     u730:	
   994  0175                     l1225:	
   995                           
   996                           ;piclib.c: 72: data2 = PORTA;
   997  0175  1283               	bcf	3,5	;RP0=0, select bank0
   998  0176  1303               	bcf	3,6	;RP1=0, select bank0
   999  0177  0805               	movf	5,w	;volatile
  1000  0178  00F4               	movwf	??_sw_read
  1001  0179  0874               	movf	??_sw_read,w
  1002  017A  00BB               	movwf	sw_read@data2
  1003  017B                     l1227:	
  1004                           
  1005                           ;piclib.c: 73: data2 = ~data2 & 0x1f;
  1006  017B  093B               	comf	sw_read@data2,w
  1007  017C  391F               	andlw	31
  1008  017D  00F4               	movwf	??_sw_read
  1009  017E  0874               	movf	??_sw_read,w
  1010  017F  00BB               	movwf	sw_read@data2
  1011  0180                     l1229:	
  1012                           
  1013                           ;piclib.c: 74: if (data == data2) {
  1014  0180  083C               	movf	sw_read@data,w
  1015  0181  063B               	xorwf	sw_read@data2,w
  1016  0182  1D03               	skipz
  1017  0183  2985               	goto	u741
  1018  0184  2986               	goto	u740
  1019  0185                     u741:	
  1020  0185  2957               	goto	l1209
  1021  0186                     u740:	
  1022  0186                     l1231:	
  1023                           
  1024                           ;piclib.c: 75: return data;
  1025  0186  083C               	movf	sw_read@data,w
  1026  0187                     l58:	
  1027  0187  0008               	return
  1028  0188                     __end_of_sw_read:	
  1029                           
  1030                           	psect	text3
  1031  0269                     __ptext3:	
  1032 ;; *************** function _init *****************
  1033 ;; Defined at:
  1034 ;;		line 16 in file "pic30/piclib.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;		None
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;		None
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, status,2
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1048 ;;      Params:         0       0       0       0
  1049 ;;      Locals:         0       0       0       0
  1050 ;;      Temps:          0       0       0       0
  1051 ;;      Totals:         0       0       0       0
  1052 ;;Total ram usage:        0 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    1
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _init
  1064  0269                     _init:	
  1065  0269                     l983:	
  1066                           ;incstack = 0
  1067                           ; Regs used in _init: [wreg+status,2]
  1068                           
  1069                           
  1070                           ;piclib.c: 18: OPTION_REG=0xd7;
  1071  0269  30D7               	movlw	215
  1072  026A  1683               	bsf	3,5	;RP0=1, select bank1
  1073  026B  1303               	bcf	3,6	;RP1=0, select bank1
  1074  026C  0081               	movwf	1	;volatile
  1075                           
  1076                           ;piclib.c: 19: CMCON = 0x07;
  1077  026D  3007               	movlw	7
  1078  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1079  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0270  009F               	movwf	31	;volatile
  1081  0271                     l985:	
  1082                           
  1083                           ;piclib.c: 20: TMR0=0;
  1084  0271  0181               	clrf	1	;volatile
  1085  0272                     l987:	
  1086                           
  1087                           ;piclib.c: 21: T0IF=0;
  1088  0272  110B               	bcf	11,2	;volatile
  1089  0273                     l989:	
  1090                           
  1091                           ;piclib.c: 22: T0IE=1;
  1092  0273  168B               	bsf	11,5	;volatile
  1093  0274                     l991:	
  1094                           
  1095                           ;piclib.c: 23: GIE=1;
  1096  0274  178B               	bsf	11,7	;volatile
  1097  0275                     l993:	
  1098                           
  1099                           ;piclib.c: 24: TRISA=0x1f;
  1100  0275  301F               	movlw	31
  1101  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0278  0085               	movwf	5	;volatile
  1104                           
  1105                           ;piclib.c: 25: TRISB=0;
  1106  0279  0186               	clrf	6	;volatile
  1107  027A                     l995:	
  1108                           
  1109                           ;piclib.c: 27: PORTB = 0xff;
  1110  027A  30FF               	movlw	255
  1111  027B  1283               	bcf	3,5	;RP0=0, select bank0
  1112  027C  1303               	bcf	3,6	;RP1=0, select bank0
  1113  027D  0086               	movwf	6	;volatile
  1114  027E                     l48:	
  1115  027E  0008               	return
  1116  027F                     __end_of_init:	
  1117                           
  1118                           	psect	text4
  1119  02C1                     __ptext4:	
  1120 ;; *************** function _halt *****************
  1121 ;; Defined at:
  1122 ;;		line 166 in file "pic30/piclib.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		status,2
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1136 ;;      Params:         0       0       0       0
  1137 ;;      Locals:         0       0       0       0
  1138 ;;      Temps:          0       0       0       0
  1139 ;;      Totals:         0       0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    1
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           
  1151                           ;psect for function _halt
  1152  02C1                     _halt:	
  1153  02C1                     l1085:	
  1154                           ;incstack = 0
  1155                           ; Regs used in _halt: [status,2]
  1156                           
  1157                           
  1158                           ;piclib.c: 168: PORTB = 0x00;
  1159  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1160  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1161  02C3  0186               	clrf	6	;volatile
  1162  02C4                     l102:	
  1163                           ;piclib.c: 169: for(;;);
  1164                           
  1165  02C4  2AC4               	goto	l102
  1166  02C5  0008               	return
  1167  02C6                     __end_of_halt:	
  1168                           
  1169                           	psect	text5
  1170  00B1                     __ptext5:	
  1171 ;; *************** function _Transition *****************
  1172 ;; Defined at:
  1173 ;;		line 65 in file "pic30/stamp.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  it              1    wreg     unsigned char 
  1176 ;;  st              1    4[COMMON] PTR enum E474
  1177 ;;		 -> main@st(1), 
  1178 ;;  a               1    5[COMMON] PTR int 
  1179 ;;		 -> main@a(2), 
  1180 ;;  b               1    6[COMMON] PTR int 
  1181 ;;		 -> main@b(2), 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  it              1    2[BANK0 ] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  2    4[COMMON] int 
  1186 ;; Registers used:
  1187 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1193 ;;      Params:         3       0       0       0
  1194 ;;      Locals:         0       1       0       0
  1195 ;;      Temps:          0       2       0       0
  1196 ;;      Totals:         3       3       0       0
  1197 ;;Total ram usage:        6 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    1
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function _Transition
  1209  00B1                     _Transition:	
  1210                           
  1211                           ;incstack = 0
  1212                           ; Regs used in _Transition: [wreg-fsr0h+status,2+status,0]
  1213                           ;Transition@it stored from wreg
  1214  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1215  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1216  00B3  00BB               	movwf	Transition@it
  1217  00B4                     l1269:	
  1218                           
  1219                           ;stamp.c: 71: *a = *b = 0;
  1220  00B4  0876               	movf	Transition@b,w
  1221  00B5  0084               	movwf	4
  1222  00B6  1383               	bcf	3,7	;select IRP bank0
  1223  00B7  0180               	clrf	0
  1224  00B8  0A84               	incf	4,f
  1225  00B9  0180               	clrf	0
  1226  00BA  0875               	movf	Transition@a,w
  1227  00BB  0084               	movwf	4
  1228  00BC  0180               	clrf	0
  1229  00BD  0A84               	incf	4,f
  1230  00BE  0180               	clrf	0
  1231  00BF                     l1271:	
  1232                           
  1233                           ;stamp.c: 72: if (it == 0x18) {
  1234  00BF  3018               	movlw	24
  1235  00C0  063B               	xorwf	Transition@it,w
  1236  00C1  1D03               	btfss	3,2
  1237  00C2  28C4               	goto	u801
  1238  00C3  28C5               	goto	u800
  1239  00C4                     u801:	
  1240  00C4  28CB               	goto	l1275
  1241  00C5                     u800:	
  1242  00C5                     l1273:	
  1243                           
  1244                           ;stamp.c: 73: *st = stExit;
  1245  00C5  3003               	movlw	3
  1246  00C6  00B9               	movwf	??_Transition
  1247  00C7  0874               	movf	Transition@st,w
  1248  00C8  0084               	movwf	4
  1249  00C9  0839               	movf	??_Transition,w
  1250  00CA  0080               	movwf	0
  1251  00CB                     l1275:	
  1252                           
  1253                           ;stamp.c: 74: };stamp.c: 75: if (it == 0x10) {
  1254  00CB  3010               	movlw	16
  1255  00CC  063B               	xorwf	Transition@it,w
  1256  00CD  1D03               	btfss	3,2
  1257  00CE  28D0               	goto	u811
  1258  00CF  28D1               	goto	u810
  1259  00D0                     u811:	
  1260  00D0  28E0               	goto	l1281
  1261  00D1                     u810:	
  1262  00D1                     l1277:	
  1263                           
  1264                           ;stamp.c: 76: *a = *st;
  1265  00D1  0874               	movf	Transition@st,w
  1266  00D2  0084               	movwf	4
  1267  00D3  0800               	movf	0,w
  1268  00D4  00B9               	movwf	??_Transition
  1269  00D5  01BA               	clrf	??_Transition+1
  1270  00D6  0875               	movf	Transition@a,w
  1271  00D7  0084               	movwf	4
  1272  00D8  0839               	movf	??_Transition,w
  1273  00D9  0080               	movwf	0
  1274  00DA  0A84               	incf	4,f
  1275  00DB  083A               	movf	??_Transition+1,w
  1276  00DC  0080               	movwf	0
  1277  00DD                     l1279:	
  1278                           
  1279                           ;stamp.c: 77: *st = stEmpty;
  1280  00DD  0874               	movf	Transition@st,w
  1281  00DE  0084               	movwf	4
  1282  00DF  0180               	clrf	0
  1283  00E0                     l1281:	
  1284                           
  1285                           ;stamp.c: 78: };stamp.c: 79: if (it == 0x01) {
  1286  00E0  033B               	decf	Transition@it,w
  1287  00E1  1D03               	btfss	3,2
  1288  00E2  28E4               	goto	u821
  1289  00E3  28E5               	goto	u820
  1290  00E4                     u821:	
  1291  00E4  2903               	goto	l1299
  1292  00E5                     u820:	
  1293  00E5                     l1283:	
  1294                           
  1295                           ;stamp.c: 80: ++*st;
  1296  00E5  3001               	movlw	1
  1297  00E6  00B9               	movwf	??_Transition
  1298  00E7  0874               	movf	Transition@st,w
  1299  00E8  0084               	movwf	4
  1300  00E9  0839               	movf	??_Transition,w
  1301  00EA  0780               	addwf	0,f
  1302  00EB                     l1285:	
  1303                           
  1304                           ;stamp.c: 81: *st = *st % 2;
  1305  00EB  0874               	movf	Transition@st,w
  1306  00EC  0084               	movwf	4
  1307  00ED  0800               	movf	0,w
  1308  00EE  3901               	andlw	1
  1309  00EF  00B9               	movwf	??_Transition
  1310  00F0  0874               	movf	Transition@st,w
  1311  00F1  0084               	movwf	4
  1312  00F2  0839               	movf	??_Transition,w
  1313  00F3  0080               	movwf	0
  1314  00F4                     l1287:	
  1315                           
  1316                           ;stamp.c: 82: if (!*st) {
  1317  00F4  0874               	movf	Transition@st,w
  1318  00F5  0084               	movwf	4
  1319  00F6  0800               	movf	0,w
  1320  00F7  1D03               	btfss	3,2
  1321  00F8  28FA               	goto	u831
  1322  00F9  28FB               	goto	u830
  1323  00FA                     u831:	
  1324  00FA  2900               	goto	l1295
  1325  00FB                     u830:	
  1326  00FB                     l1289:	
  1327                           
  1328                           ;stamp.c: 83: return 1;
  1329  00FB  3001               	movlw	1
  1330  00FC  00F4               	movwf	?_Transition
  1331  00FD  3000               	movlw	0
  1332  00FE  00F5               	movwf	?_Transition+1
  1333  00FF  2928               	goto	l151
  1334  0100                     l1295:	
  1335                           
  1336                           ;stamp.c: 85: return 0;
  1337  0100  01F4               	clrf	?_Transition
  1338  0101  01F5               	clrf	?_Transition+1
  1339  0102  2928               	goto	l151
  1340  0103                     l1299:	
  1341                           
  1342                           ;stamp.c: 86: };stamp.c: 87: };stamp.c: 88: if (it == 0x02) {
  1343  0103  3002               	movlw	2
  1344  0104  063B               	xorwf	Transition@it,w
  1345  0105  1D03               	btfss	3,2
  1346  0106  2908               	goto	u841
  1347  0107  2909               	goto	u840
  1348  0108                     u841:	
  1349  0108  2900               	goto	l1295
  1350  0109                     u840:	
  1351  0109                     l1301:	
  1352                           
  1353                           ;stamp.c: 89: *st += 5;
  1354  0109  3005               	movlw	5
  1355  010A  00B9               	movwf	??_Transition
  1356  010B  0874               	movf	Transition@st,w
  1357  010C  0084               	movwf	4
  1358  010D  0839               	movf	??_Transition,w
  1359  010E  0780               	addwf	0,f
  1360  010F                     l1303:	
  1361                           
  1362                           ;stamp.c: 90: *st = *st % 2;
  1363  010F  0874               	movf	Transition@st,w
  1364  0110  0084               	movwf	4
  1365  0111  0800               	movf	0,w
  1366  0112  3901               	andlw	1
  1367  0113  00B9               	movwf	??_Transition
  1368  0114  0874               	movf	Transition@st,w
  1369  0115  0084               	movwf	4
  1370  0116  0839               	movf	??_Transition,w
  1371  0117  0080               	movwf	0
  1372  0118                     l1305:	
  1373                           
  1374                           ;stamp.c: 91: if (*st) {
  1375  0118  0874               	movf	Transition@st,w
  1376  0119  0084               	movwf	4
  1377  011A  0800               	movf	0,w
  1378  011B  1903               	btfsc	3,2
  1379  011C  291E               	goto	u851
  1380  011D  291F               	goto	u850
  1381  011E                     u851:	
  1382  011E  2924               	goto	l1313
  1383  011F                     u850:	
  1384  011F                     l1307:	
  1385                           
  1386                           ;stamp.c: 92: return 2;
  1387  011F  3002               	movlw	2
  1388  0120  00F4               	movwf	?_Transition
  1389  0121  3000               	movlw	0
  1390  0122  00F5               	movwf	?_Transition+1
  1391  0123  2928               	goto	l151
  1392  0124                     l1313:	
  1393                           
  1394                           ;stamp.c: 94: return 3;
  1395  0124  3003               	movlw	3
  1396  0125  00F4               	movwf	?_Transition
  1397  0126  3000               	movlw	0
  1398  0127  00F5               	movwf	?_Transition+1
  1399  0128                     l151:	
  1400  0128  0008               	return
  1401  0129                     __end_of_Transition:	
  1402                           
  1403                           	psect	text6
  1404  0188                     __ptext6:	
  1405 ;; *************** function _StampOut *****************
  1406 ;; Defined at:
  1407 ;;		line 95 in file "pic30/piclib.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  num             2    0[BANK0 ] int 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1421 ;;      Params:         0       2       0       0
  1422 ;;      Locals:         0       0       0       0
  1423 ;;      Temps:          0       0       0       0
  1424 ;;      Totals:         0       2       0       0
  1425 ;;Total ram usage:        2 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    2
  1428 ;; This function calls:
  1429 ;;		_led_on
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           
  1436                           ;psect for function _StampOut
  1437  0188                     _StampOut:	
  1438  0188                     l1241:	
  1439                           ;incstack = 0
  1440                           ; Regs used in _StampOut: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1441                           
  1442                           
  1443                           ;piclib.c: 96: if (num >= 3) {
  1444  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1446  018A  083A               	movf	StampOut@num+1,w
  1447  018B  3A80               	xorlw	128
  1448  018C  00FF               	movwf	btemp+1
  1449  018D  3080               	movlw	128
  1450  018E  027F               	subwf	btemp+1,w
  1451  018F  1D03               	skipz
  1452  0190  2993               	goto	u755
  1453  0191  3003               	movlw	3
  1454  0192  0239               	subwf	StampOut@num,w
  1455  0193                     u755:	
  1456  0193  1C03               	skipc
  1457  0194  2996               	goto	u751
  1458  0195  2997               	goto	u750
  1459  0196                     u751:	
  1460  0196  299B               	goto	l1245
  1461  0197                     u750:	
  1462  0197                     l1243:	
  1463                           
  1464                           ;piclib.c: 97: led_on(0x20);
  1465  0197  3020               	movlw	32
  1466  0198  118A  229E  118A   	fcall	_led_on
  1467  019B                     l1245:	
  1468                           
  1469                           ;piclib.c: 98: };piclib.c: 99: if (num >= 2) {
  1470  019B  1283               	bcf	3,5	;RP0=0, select bank0
  1471  019C  1303               	bcf	3,6	;RP1=0, select bank0
  1472  019D  083A               	movf	StampOut@num+1,w
  1473  019E  3A80               	xorlw	128
  1474  019F  00FF               	movwf	btemp+1
  1475  01A0  3080               	movlw	128
  1476  01A1  027F               	subwf	btemp+1,w
  1477  01A2  1D03               	skipz
  1478  01A3  29A6               	goto	u765
  1479  01A4  3002               	movlw	2
  1480  01A5  0239               	subwf	StampOut@num,w
  1481  01A6                     u765:	
  1482  01A6  1C03               	skipc
  1483  01A7  29A9               	goto	u761
  1484  01A8  29AA               	goto	u760
  1485  01A9                     u761:	
  1486  01A9  29AE               	goto	l1249
  1487  01AA                     u760:	
  1488  01AA                     l1247:	
  1489                           
  1490                           ;piclib.c: 100: led_on(0x80);
  1491  01AA  3080               	movlw	128
  1492  01AB  118A  229E  118A   	fcall	_led_on
  1493  01AE                     l1249:	
  1494                           
  1495                           ;piclib.c: 101: };piclib.c: 102: if (num >= 1) {
  1496  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1497  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1498  01B0  083A               	movf	StampOut@num+1,w
  1499  01B1  3A80               	xorlw	128
  1500  01B2  00FF               	movwf	btemp+1
  1501  01B3  3080               	movlw	128
  1502  01B4  027F               	subwf	btemp+1,w
  1503  01B5  1D03               	skipz
  1504  01B6  29B9               	goto	u775
  1505  01B7  3001               	movlw	1
  1506  01B8  0239               	subwf	StampOut@num,w
  1507  01B9                     u775:	
  1508  01B9  1C03               	skipc
  1509  01BA  29BC               	goto	u771
  1510  01BB  29BD               	goto	u770
  1511  01BC                     u771:	
  1512  01BC  29C1               	goto	l71
  1513  01BD                     u770:	
  1514  01BD                     l1251:	
  1515                           
  1516                           ;piclib.c: 103: led_on(0x40);
  1517  01BD  3040               	movlw	64
  1518  01BE  118A  229E  118A   	fcall	_led_on
  1519  01C1                     l71:	
  1520  01C1  0008               	return
  1521  01C2                     __end_of_StampOut:	
  1522                           
  1523                           	psect	text7
  1524  0290                     __ptext7:	
  1525 ;; *************** function _DispStatus *****************
  1526 ;; Defined at:
  1527 ;;		line 85 in file "pic30/piclib.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  bit1            1    wreg     unsigned char 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  bit1            1    0[BANK0 ] unsigned char 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, status,2, status,0, pclath, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1541 ;;      Params:         0       0       0       0
  1542 ;;      Locals:         0       1       0       0
  1543 ;;      Temps:          0       0       0       0
  1544 ;;      Totals:         0       1       0       0
  1545 ;;Total ram usage:        1 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:    2
  1548 ;; This function calls:
  1549 ;;		_led_off
  1550 ;;		_led_on
  1551 ;; This function is called by:
  1552 ;;		_main
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           
  1557                           ;psect for function _DispStatus
  1558  0290                     _DispStatus:	
  1559                           
  1560                           ;incstack = 0
  1561                           ; Regs used in _DispStatus: [wreg+status,2+status,0+pclath+cstack]
  1562                           ;DispStatus@bit1 stored from wreg
  1563  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0292  00B9               	movwf	DispStatus@bit1
  1566  0293                     l1239:	
  1567                           
  1568                           ;piclib.c: 88: led_off(0xff);
  1569  0293  30FF               	movlw	255
  1570  0294  118A  22AC  118A   	fcall	_led_off
  1571                           
  1572                           ;piclib.c: 89: led_on(bit1);
  1573  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1575  0299  0839               	movf	DispStatus@bit1,w
  1576  029A  118A  229E  118A   	fcall	_led_on
  1577  029D                     l65:	
  1578  029D  0008               	return
  1579  029E                     __end_of_DispStatus:	
  1580                           
  1581                           	psect	text8
  1582  029E                     __ptext8:	
  1583 ;; *************** function _led_on *****************
  1584 ;; Defined at:
  1585 ;;		line 33 in file "pic30/piclib.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  bit1            1    wreg     unsigned char 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  bit1            1    5[COMMON] unsigned char 
  1590 ;;  data            1    6[COMMON] unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1600 ;;      Params:         0       0       0       0
  1601 ;;      Locals:         2       0       0       0
  1602 ;;      Temps:          1       0       0       0
  1603 ;;      Totals:         3       0       0       0
  1604 ;;Total ram usage:        3 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    1
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_DispStatus
  1611 ;;		_StampOut
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function _led_on
  1617  029E                     _led_on:	
  1618                           
  1619                           ;incstack = 0
  1620                           ; Regs used in _led_on: [wreg+status,2+status,0]
  1621                           ;led_on@bit1 stored from wreg
  1622  029E  00F5               	movwf	led_on@bit1
  1623  029F                     l1181:	
  1624                           
  1625                           ;piclib.c: 35: char data;;piclib.c: 37: data = PORTB;
  1626  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1627  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1628  02A1  0806               	movf	6,w	;volatile
  1629  02A2  00F4               	movwf	??_led_on
  1630  02A3  0874               	movf	??_led_on,w
  1631  02A4  00F6               	movwf	led_on@data
  1632  02A5                     l1183:	
  1633                           
  1634                           ;piclib.c: 38: data &= ~bit1;
  1635  02A5  0975               	comf	led_on@bit1,w
  1636  02A6  00F4               	movwf	??_led_on
  1637  02A7  0874               	movf	??_led_on,w
  1638  02A8  05F6               	andwf	led_on@data,f
  1639  02A9                     l1185:	
  1640                           
  1641                           ;piclib.c: 39: PORTB = data;
  1642  02A9  0876               	movf	led_on@data,w
  1643  02AA  0086               	movwf	6	;volatile
  1644  02AB                     l51:	
  1645  02AB  0008               	return
  1646  02AC                     __end_of_led_on:	
  1647                           
  1648                           	psect	text9
  1649  02AC                     __ptext9:	
  1650 ;; *************** function _led_off *****************
  1651 ;; Defined at:
  1652 ;;		line 45 in file "pic30/piclib.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  bit1            1    wreg     unsigned char 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  bit1            1    5[COMMON] unsigned char 
  1657 ;;  data            1    6[COMMON] unsigned char 
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1667 ;;      Params:         0       0       0       0
  1668 ;;      Locals:         2       0       0       0
  1669 ;;      Temps:          1       0       0       0
  1670 ;;      Totals:         3       0       0       0
  1671 ;;Total ram usage:        3 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    1
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_DispStatus
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           
  1682                           ;psect for function _led_off
  1683  02AC                     _led_off:	
  1684                           
  1685                           ;incstack = 0
  1686                           ; Regs used in _led_off: [wreg+status,2+status,0]
  1687                           ;led_off@bit1 stored from wreg
  1688  02AC  00F5               	movwf	led_off@bit1
  1689  02AD                     l1187:	
  1690                           
  1691                           ;piclib.c: 47: char data;;piclib.c: 49: data = PORTB;
  1692  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  1693  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  1694  02AF  0806               	movf	6,w	;volatile
  1695  02B0  00F4               	movwf	??_led_off
  1696  02B1  0874               	movf	??_led_off,w
  1697  02B2  00F6               	movwf	led_off@data
  1698  02B3                     l1189:	
  1699                           
  1700                           ;piclib.c: 50: data |= bit1;
  1701  02B3  0875               	movf	led_off@bit1,w
  1702  02B4  00F4               	movwf	??_led_off
  1703  02B5  0874               	movf	??_led_off,w
  1704  02B6  04F6               	iorwf	led_off@data,f
  1705  02B7                     l1191:	
  1706                           
  1707                           ;piclib.c: 51: PORTB = data;
  1708  02B7  0876               	movf	led_off@data,w
  1709  02B8  0086               	movwf	6	;volatile
  1710  02B9                     l54:	
  1711  02B9  0008               	return
  1712  02BA                     __end_of_led_off:	
  1713                           
  1714                           	psect	text10
  1715  0233                     __ptext10:	
  1716 ;; *************** function _DispCoinB *****************
  1717 ;; Defined at:
  1718 ;;		line 122 in file "pic30/piclib.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  num             2    4[COMMON] int 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  2    4[COMMON] int 
  1725 ;; Registers used:
  1726 ;;		wreg, btemp+1
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1732 ;;      Params:         2       0       0       0
  1733 ;;      Locals:         0       0       0       0
  1734 ;;      Temps:          0       0       0       0
  1735 ;;      Totals:         2       0       0       0
  1736 ;;Total ram usage:        2 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           
  1747                           ;psect for function _DispCoinB
  1748  0233                     _DispCoinB:	
  1749  0233                     l1065:	
  1750                           ;incstack = 0
  1751                           ; Regs used in _DispCoinB: [wreg+btemp+1]
  1752                           
  1753                           
  1754                           ;piclib.c: 126: if (num <= 0 || num > 4) return 0;
  1755  0233  0875               	movf	DispCoinB@num+1,w
  1756  0234  3A80               	xorlw	128
  1757  0235  00FF               	movwf	btemp+1
  1758  0236  3080               	movlw	128
  1759  0237  027F               	subwf	btemp+1,w
  1760  0238  1D03               	skipz
  1761  0239  2A3C               	goto	u495
  1762  023A  3001               	movlw	1
  1763  023B  0274               	subwf	DispCoinB@num,w
  1764  023C                     u495:	
  1765  023C  1C03               	skipc
  1766  023D  2A3F               	goto	u491
  1767  023E  2A40               	goto	u490
  1768  023F                     u491:	
  1769  023F  2A4F               	goto	l83
  1770  0240                     u490:	
  1771  0240                     l1067:	
  1772  0240  0875               	movf	DispCoinB@num+1,w
  1773  0241  3A80               	xorlw	128
  1774  0242  00FF               	movwf	btemp+1
  1775  0243  3080               	movlw	128
  1776  0244  027F               	subwf	btemp+1,w
  1777  0245  1D03               	skipz
  1778  0246  2A49               	goto	u505
  1779  0247  3005               	movlw	5
  1780  0248  0274               	subwf	DispCoinB@num,w
  1781  0249                     u505:	
  1782  0249  1C03               	skipc
  1783  024A  2A4C               	goto	u501
  1784  024B  2A4D               	goto	u500
  1785  024C                     u501:	
  1786  024C  2A4E               	goto	l80
  1787  024D                     u500:	
  1788  024D  2A4F               	goto	l83
  1789  024E                     l80:	
  1790                           
  1791                           ;piclib.c: 127: outcoin |= 0x10;
  1792  024E  1677               	bsf	_outcoin,4
  1793  024F                     l83:	
  1794                           ;piclib.c: 128: return 1;;	Return value of _DispCoinB is never used
  1795                           
  1796  024F  0008               	return
  1797  0250                     __end_of_DispCoinB:	
  1798                           
  1799                           	psect	text11
  1800  01EB                     __ptext11:	
  1801 ;; *************** function _DispCoinA *****************
  1802 ;; Defined at:
  1803 ;;		line 110 in file "pic30/piclib.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  num             2    4[COMMON] int 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  2    4[COMMON] int 
  1810 ;; Registers used:
  1811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1817 ;;      Params:         2       0       0       0
  1818 ;;      Locals:         0       0       0       0
  1819 ;;      Temps:          1       0       0       0
  1820 ;;      Totals:         3       0       0       0
  1821 ;;Total ram usage:        3 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:    1
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_main
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           
  1832                           ;psect for function _DispCoinA
  1833  01EB                     _DispCoinA:	
  1834  01EB                     l1057:	
  1835                           ;incstack = 0
  1836                           ; Regs used in _DispCoinA: [wreg-fsr0h+status,2+status,0+btemp+1]
  1837                           
  1838                           
  1839                           ;piclib.c: 114: if (num <= 0 || num > 4) return 0;
  1840  01EB  0875               	movf	DispCoinA@num+1,w
  1841  01EC  3A80               	xorlw	128
  1842  01ED  00FF               	movwf	btemp+1
  1843  01EE  3080               	movlw	128
  1844  01EF  027F               	subwf	btemp+1,w
  1845  01F0  1D03               	skipz
  1846  01F1  29F4               	goto	u475
  1847  01F2  3001               	movlw	1
  1848  01F3  0274               	subwf	DispCoinA@num,w
  1849  01F4                     u475:	
  1850  01F4  1C03               	skipc
  1851  01F5  29F7               	goto	u471
  1852  01F6  29F8               	goto	u470
  1853  01F7                     u471:	
  1854  01F7  2A0E               	goto	l77
  1855  01F8                     u470:	
  1856  01F8                     l1059:	
  1857  01F8  0875               	movf	DispCoinA@num+1,w
  1858  01F9  3A80               	xorlw	128
  1859  01FA  00FF               	movwf	btemp+1
  1860  01FB  3080               	movlw	128
  1861  01FC  027F               	subwf	btemp+1,w
  1862  01FD  1D03               	skipz
  1863  01FE  2A01               	goto	u485
  1864  01FF  3005               	movlw	5
  1865  0200  0274               	subwf	DispCoinA@num,w
  1866  0201                     u485:	
  1867  0201  1C03               	skipc
  1868  0202  2A04               	goto	u481
  1869  0203  2A05               	goto	u480
  1870  0204                     u481:	
  1871  0204  2A06               	goto	l1061
  1872  0205                     u480:	
  1873  0205  2A0E               	goto	l77
  1874  0206                     l1061:	
  1875                           
  1876                           ;piclib.c: 115: outcoin |= red_led[num];
  1877  0206  0874               	movf	DispCoinA@num,w
  1878  0207  3E34               	addlw	(low (_red_led| 0))& (0+255)
  1879  0208  0084               	movwf	4
  1880  0209  1383               	bcf	3,7	;select IRP bank0
  1881  020A  0800               	movf	0,w
  1882  020B  00F6               	movwf	??_DispCoinA
  1883  020C  0876               	movf	??_DispCoinA,w
  1884  020D  04F7               	iorwf	_outcoin,f
  1885  020E                     l77:	
  1886  020E  0008               	return
  1887  020F                     __end_of_DispCoinA:	
  1888                           
  1889                           	psect	text12
  1890  020F                     __ptext12:	
  1891 ;; *************** function _isr *****************
  1892 ;; Defined at:
  1893 ;;		line 134 in file "pic30/piclib.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  i               1    3[COMMON] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1907 ;;      Params:         0       0       0       0
  1908 ;;      Locals:         1       0       0       0
  1909 ;;      Temps:          3       0       0       0
  1910 ;;      Totals:         4       0       0       0
  1911 ;;Total ram usage:        4 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		Interrupt level 1
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function _isr
  1922  020F                     _isr:	
  1923  020F                     i1l915:	
  1924                           
  1925                           ;piclib.c: 136: char i;;piclib.c: 138: if (T0IF){
  1926  020F  1D0B               	btfss	11,2	;volatile
  1927  0210  2A12               	goto	u25_21
  1928  0211  2A13               	goto	u25_20
  1929  0212                     u25_21:	
  1930  0212  2A2C               	goto	i1l91
  1931  0213                     u25_20:	
  1932  0213                     i1l917:	
  1933                           
  1934                           ;piclib.c: 139: T0IF=0;
  1935  0213  110B               	bcf	11,2	;volatile
  1936  0214                     i1l919:	
  1937                           
  1938                           ;piclib.c: 140: if(--cnt == 0){
  1939  0214  3001               	movlw	1
  1940  0215  02F9               	subwf	_cnt,f
  1941  0216  1D03               	btfss	3,2
  1942  0217  2A19               	goto	u26_21
  1943  0218  2A1A               	goto	u26_20
  1944  0219                     u26_21:	
  1945  0219  2A2C               	goto	i1l91
  1946  021A                     u26_20:	
  1947  021A                     i1l921:	
  1948                           
  1949                           ;piclib.c: 141: if (outfg) {
  1950  021A  0878               	movf	_outfg,w
  1951  021B  1903               	btfsc	3,2
  1952  021C  2A1E               	goto	u27_21
  1953  021D  2A1F               	goto	u27_20
  1954  021E                     u27_21:	
  1955  021E  2A28               	goto	i1l927
  1956  021F                     u27_20:	
  1957  021F                     i1l923:	
  1958                           
  1959                           ;piclib.c: 142: i = PORTB;
  1960  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0221  0806               	movf	6,w	;volatile
  1963  0222  00F0               	movwf	??_isr
  1964  0223  0870               	movf	??_isr,w
  1965  0224  00F3               	movwf	isr@i
  1966  0225                     i1l925:	
  1967                           
  1968                           ;piclib.c: 143: PORTB = (i ^ outcoin);
  1969  0225  0873               	movf	isr@i,w
  1970  0226  0677               	xorwf	_outcoin,w
  1971  0227  0086               	movwf	6	;volatile
  1972  0228                     i1l927:	
  1973  0228  3009               	movlw	9
  1974  0229  00F0               	movwf	??_isr
  1975  022A  0870               	movf	??_isr,w
  1976  022B  00F9               	movwf	_cnt
  1977  022C                     i1l91:	
  1978  022C  0872               	movf	??_isr+2,w
  1979  022D  008A               	movwf	10
  1980  022E  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1981  022F  0083               	movwf	3
  1982  0230  0EFE               	swapf	btemp,f
  1983  0231  0E7E               	swapf	btemp,w
  1984  0232  0009               	retfie
  1985  0233                     __end_of_isr:	
  1986  007E                     btemp	set	126	;btemp
  1987  007E                     wtemp0	set	126
  1988                           
  1989                           	psect	intentry
  1990  0004                     __pintentry:	
  1991                           ;incstack = 0
  1992                           ; Regs used in _isr: [wreg+status,2+status,0]
  1993                           
  1994  0004                     interrupt_function:	
  1995  007E                     saved_w	set	btemp
  1996  0004  00FE               	movwf	btemp
  1997  0005  0E03               	swapf	3,w
  1998  0006  00F1               	movwf	??_isr+1
  1999  0007  080A               	movf	10,w
  2000  0008  00F2               	movwf	??_isr+2
  2001  0009  118A  2A0F         	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    1
    Data        26
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     15      40
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    Transition@st	PTR enum E474 size(1) Largest target is 1
		 -> main@st(BANK0[1]), 

    Transition@b	PTR int  size(1) Largest target is 2
		 -> main@b(BANK0[2]), 

    Transition@a	PTR int  size(1) Largest target is 2
		 -> main@a(BANK0[2]), 


Critical Paths under _main in COMMON

    _main->_DispCoinA
    _main->_Transition
    _StampOut->_led_on
    _DispStatus->_led_off
    _DispStatus->_led_on

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sw_read
    _main->_timer

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    2642
                                              4 BANK0     11    11      0
                          _DispCoinA
                          _DispCoinB
                         _DispStatus
                           _StampOut
                         _Transition
                               _halt
                               _init
                            _sw_read
                              _timer
 ---------------------------------------------------------------------------------
 (1) _timer                                                5     5      0     136
                                              4 COMMON     1     1      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _sw_read                                              5     5      0     452
                                              4 COMMON     1     1      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _halt                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Transition                                           6     3      3     828
                                              4 COMMON     3     0      3
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _StampOut                                             2     0      2     251
                                              0 BANK0      2     0      2
                             _led_on
 ---------------------------------------------------------------------------------
 (1) _DispStatus                                           1     1      0     167
                                              0 BANK0      1     1      0
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (2) _led_on                                               3     3      0      68
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _led_off                                              3     3      0      68
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _DispCoinB                                            2     0      2     120
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DispCoinA                                            3     1      2     142
                                              4 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DispCoinA
   _DispCoinB
   _DispStatus
     _led_off
     _led_on
   _StampOut
     _led_on
   _Transition
   _halt
   _init
   _sw_read
   _timer

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0       0       7        0.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       5        0.0%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      28       3       50.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      32      10        0.0%
ABS                  0      0      32       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Oct 07 16:03:44 2019

                      pc 0002                       l51 02AB                       l54 02B9  
                     l71 01C1                       l80 024E                       l48 027E  
                     l65 029D                       l58 0187                       l83 024F  
                     l77 020E                       l99 01EA                       fsr 0004  
                    l102 02C4                      l151 0128                      l144 00AF  
                    l139 0099                      l991 0274                      l983 0269  
                    l993 0275                      l985 0271                      l995 027A  
                    l987 0272                      _GIE 005F                      l989 0273  
                    u500 024D                      u501 024C                      u505 0249  
                    u700 0151                      u701 0150                      u470 01F8  
                    u710 0157                      u471 01F7                      u711 0156  
                    u480 0205                      u800 00C5                      u720 015E  
                    u481 0204                      u801 00C4                      u721 015D  
                    u490 0240                      u810 00D1                      u730 0175  
                    u475 01F4                      u491 023F                      u811 00D0  
                    u731 0174                      u820 00E5                      u740 0186  
                    u660 0139                      u900 0094                      u485 0201  
                    u821 00E4                      u741 0185                      u661 0138  
                    u901 0093                      u750 0197                      u830 00FB  
                    u670 013F                      u910 00A6                      u495 023C  
                    u751 0196                      u831 00FA                      u735 0171  
                    u671 013E                      u911 00A5                      u760 01AA  
                    u840 0109                      u680 0145                      u920 00AC  
                    u761 01A9                      u841 0108                      u681 0144  
                    u921 00AB                      u770 01BD                      u850 011F  
                    u690 014B                      u771 01BC                      u755 0193  
                    u851 011E                      u691 014A                      u780 01DE  
                    u860 0037                      u765 01A6                      u781 01DD  
                    u861 0036                      u790 01EA                      u870 0066  
                    u775 01B9                      u791 01E9                      u871 0065  
                    u880 0077                      u785 01DA                      u881 0076  
                    u890 0086                      u891 0085                      _cnt 0079  
                    _isr 020F                      fsr0 0004                      indf 0000  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     l1201 013F  
                   l1203 0145                     l1061 0206                     l1301 0109  
                   l1221 0160                     l1205 014B                     l1213 0159  
                   l1303 010F                     l1231 0186                     l1223 0168  
                   l1215 015E                     l1207 0151                     l1057 01EB  
                   l1065 0233                     l1241 0188                     l1313 0124  
                   l1305 0118                     l1225 0175                     l1209 0157  
                   l1321 0022                     l1059 01F8                     l1067 0240  
                   l1251 01BD                     l1243 0197                     l1307 011F  
                   l1227 017B                     l1323 0025                     l1181 029F  
                   l1245 019B                     l1085 02C1                     l1229 0180  
                   l1261 01C9                     l1253 01C5                     l1341 0066  
                   l1333 0038                     l1325 0028                     l1191 02B7  
                   l1183 02A5                     l1239 0293                     l1247 01AA  
                   l1271 00BF                     l1263 01D1                     l1255 01C7  
                   l1351 0086                     l1343 0068                     l1335 003A  
                   l1327 002A                     l1185 02A9                     l1249 01AE  
                   l1281 00E0                     l1273 00C5                     l1193 0129  
                   l1265 01DE                     l1361 00AC                     l1353 008E  
                   l1345 006F                     l1337 0050                     l1329 0032  
                   l1187 02AD                     l1283 00E5                     l1275 00CB  
                   l1195 012F                     l1267 01E4                     l1347 0077  
                   l1339 0058                     l1189 02B3                     l1285 00EB  
                   l1277 00D1                     l1269 00B4                     l1197 0134  
                   l1357 0095                     l1349 007E                     l1295 0100  
                   l1287 00F4                     l1279 00DD                     l1199 0139  
                   l1359 00A6                     l1289 00FB                     l1299 0103  
                   ?_isr 0070                     _T0IE 005D                     _T0IF 005A  
                   i1l91 022C                     _TMR0 0001                     _halt 02C1  
                   _main 0022                     _init 0269              led_off@bit1 0075  
            led_off@data 0076                     btemp 007E                     isr@i 0073  
                   start 000B             Transition@it 003B             Transition@st 0074  
                  ??_isr 0070                    ?_halt 0070                    ?_main 0070  
                  ?_init 0070            __CFG_WDTE$OFF 0000                    _CMCON 001F  
                  i1l921 021A                    i1l923 021F                    i1l915 020F  
                  i1l925 0225                    i1l917 0213                    i1l927 0228  
                  i1l919 0214               _DispStatus 0290                    u25_20 0213  
                  u25_21 0212                    u26_20 021A                    u26_21 0219  
                  u27_20 021F                    u27_21 021E                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
          __CFG_PWRTE$ON 0000          __end_of_led_off 02BA                    _timer 01C2  
                  _outfg 0078                    main@a 0045                    main@b 0043  
                  main@s 0040           __CFG_BOREN$OFF 0000                    pclath 000A  
        __end_of_sw_read 0188                    status 0003                    wtemp0 007E  
        __initialization 000D             __end_of_halt 02C6             __end_of_main 00B1  
           __end_of_init 027F                   ??_halt 0074                   ??_main 003D  
                 ??_init 0074       __size_of_DispCoinA 0024       __size_of_DispCoinB 001D  
       __end_of_StampOut 01C2                   ?_timer 0070                   _UPDATE 02C0  
                 _led_on 029E             sw_read@data2 003B                   main@it 0042  
                 main@st 0047                ??_led_off 0074              ?_DispStatus 0070  
           __pdataCOMMON 0079                   saved_w 007E                   timer@i 0039  
                 timer@j 003A                   timer@t 003B                ??_sw_read 0074  
             _Transition 00B1  __end_of__initialization 001F        __end_of_DispCoinA 020F  
      __end_of_DispCoinB 0250           __pcstackCOMMON 0070             __pidataBANK0 0250  
          __end_of_timer 01EB                  ??_timer 0074      __size_of_DispStatus 000E  
             __pmaintext 0022                ?_StampOut 0039               __pintentry 0004  
                ?_led_on 0070              ?_Transition 0074               __stringtab 02BA  
             ??_StampOut 0077          __size_of_led_on 000E                  __ptext1 01C2  
                __ptext2 0129                  __ptext3 0269                  __ptext4 02C1  
                __ptext5 00B1                  __ptext6 0188                  __ptext7 0290  
                __ptext8 029E                  __ptext9 02AC                  _led_off 02AC  
           __size_of_isr 0024                  _red_led 0034                  _outcoin 0077  
                _sw_read 0129     end_of_initialization 001F      __size_of_Transition 0078  
         DispStatus@bit1 0039             ??_DispStatus 0077              StampOut@num 0039  
             _status_bit 0020           __end_of_UPDATE 02C1               led_on@bit1 0075  
             led_on@data 0076              Transition@a 0075              Transition@b 0076  
     __end_of_DispStatus 029E                _DispCoinA 01EB                _DispCoinB 0233  
          __pidataCOMMON 02C6           __end_of_led_on 02AC      start_initialization 000D  
            __end_of_isr 0233               ?_DispCoinA 0074               ?_DispCoinB 0074  
            sw_read@data 003C               init_fetch0 027F                 ??_led_on 0074  
            __pdataBANK0 0020        __size_of_StampOut 003A              __pbssCOMMON 0077  
              ___latbits 0001            __pcstackBANK0 0039             ??_Transition 0039  
     __end_of_Transition 0129                __pstrings 02BA                 ?_led_off 0070  
               ?_sw_read 0070           __size_of_timer 0029        interrupt_function 0004  
            ??_DispCoinA 0076              ??_DispCoinB 0076              __stringbase 02BF  
           DispCoinA@num 0074             DispCoinB@num 0074                 _StampOut 0188  
     __end_of__stringtab 02C0         __size_of_led_off 000E                 __ptext10 0233  
               __ptext11 01EB                 __ptext12 020F         __size_of_sw_read 005F  
          __size_of_halt 0005            __size_of_main 008F            __size_of_init 0016  
               init_ram0 0283                 intlevel1 0000                stringcode 02BA  
               sw_read@t 0039               _OPTION_REG 0081                 stringdir 02BA  
               stringtab 02BA  
